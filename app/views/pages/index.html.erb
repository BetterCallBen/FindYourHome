<div class="contain"
     data-action="click->apartments#hideAll click->locations#hideLocations"
     data-controller="apartments locations bedrooms"
     locations-insses-value="<%= @locations_insees.nil? ? [] : @locations_insees %>"
     bedrooms-bedrooms-value="<%= @bedrooms.nil? ? [] : @bedrooms%>"
     bedrooms-rooms-value="<%= @rooms.nil? ? [] : @rooms%>">
  <div class="form">
    <%= form_with(url: properties_path, method: :get,
                  data: { 'apartments-target': "form" },
                  html: {
                    autocomplete: "off"
                  }) do |f| %>

      <% if params[:project].present? %>
        <input type="hidden" name="project" value="<%= params[:project] %>">
      <% end %>


      <div class="project-filter div-filter">
        <%= link_to request.params.merge(page: 1, project: "rent"), class: "project-btn" do %>
          <p class="project-title <%= 'active' if params[:project] == 'rent' %>">Louer</p>
          <div class="line <%= 'd-none' unless params[:project] == 'rent' %>"></div>
        <% end %>
        <%= link_to request.params.merge(page: 1, project: "buy"), class: "project-btn #{ 'active' if params[:project] == 'buy' }" do %>
          <p class="project-title <%= 'active' if params[:project] == 'buy' %>">Acheter</p>
          <div class="line <%= 'd-none' unless params[:project] == 'buy' %>"></div>
        <% end %>
      </div>

      <div class="types-filter div-filter">
        <div class="type-btn <%= 'active' if params[:types].present? && params[:types].include?("flat") %>">
          <div class="type-icon">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="svg-icon">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21" />
            </svg>

          </div>
          <p class="type-text">Appartement</p>
          <%= link_to "",
            if params[:types].present?
              request.params.merge(page: 1, types: params[:types].include?("flat") ? params[:types].delete("flat,") : params[:types] + "flat,")
            else
              request.params.merge(page: 1, types: "flat,")
            end, class: "link"
          %>

        </div>

        <div class="type-btn <%= 'active' if params[:types].present? && params[:types].include?("house") %>">
          <div class="type-icon">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="svg-icon">
              <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
            </svg>

          </div>
          <p class="type-text">Maison</p>
          <%= link_to "",
            if params[:types].present?
              request.params.merge(page: 1, types: params[:types].include?("house") ? params[:types].delete("house,") : params[:types] + "house,")
            else
              request.params.merge(page: 1, types: "house,")
            end, class: "link"
          %>

        </div>



      </div>

      <% if params[:types] %>
        <input class="filter" type="hidden" data-apartments-target="types" name="types" value="<%= params[:types]%>">
      <% end %>

      <div class="locations">
        <div class="location-input">
          <% unless @locations_tags.nil? %>
            <div class="location-tags" >
              <% @locations_tags.each do |location_tag| %>
                <%= link_to params[:locations].split(",").count == 1 ? request.params.except(:locations) : request.params.merge(page: 1, locations: params[:locations].split(",").delete_if { |n| n == location_tag.insee_code}.join(",") ),
                    class: "location-tag" do %>
                  <p class="location"><%= location_tag.name %></p>
                  <i class="fa-solid fa-xmark cross"></i>
                <% end %>
              <% end %>
            </div>
          <% end %>
          <input class="input" placeholder="<%= "Saisissez une ville ou un arrondissement" if @locations_tags.nil? %>" type="text" data-action="keyup->locations#searchLocations click->locations#displayLocations">
        </div>

        <input class="filter d-none" data-locations-target="locations" name="locations" value="<%= params[:locations] if params[:locations] %>">

        <div class="relative-div">
          <div class="location-results d-none" data-locations-target="locationResults" data-action="click->locations#dontHideLocations">
            <% unless @locations_tags.nil? %>
              <div class="placehold">
                <p>Saisissez une ville ou un arrondissement</p>
              </div>
            <% end %>
          </div>
        </div>
      </div>

      <div class="rooms-bedrooms">

        <div class="rooms">
          <p class="filter-title">Nombre de pièce</p>

          <div class="room-filter div-filter">

            <% (1..5).each do |room| %>

              <div class="filling-div">
                <%= room_filter(room, "rooms") %>
              </div>

            <% end %>

            <% if params[:rooms].present? %>
              <input type="hidden" name="rooms" value="<%= params[:rooms]%>">
            <% end %>

          </div>
        </div>

        <div class="bedrooms">
          <p class="filter-title">Nombre de chambre</p>

          <div class="bedroom-filter div-filter">

            <% (1..5).each do |bedroom| %>

              <div class="filling-div">
                <%= room_filter(bedroom, "bedrooms") %>
              </div>

            <% end %>

            <% if params[:bedrooms].present? %>
              <input type="hidden" name="bedrooms" value="<%= params[:bedrooms]%>">
            <% end %>

          </div>
        </div>

      </div>



      <p class="filter-title">Surface</p>

      <div class="surface-filter div-filter">
        <div class="min-surface-input">
          <input placeholder="Min" class="input" data-action="keyup->apartments#changeSurface"  min="1" max="120" type="number" name="surface_min" value=<%= params[:surface_min] if params[:surface_min].present? %> >
          <span>m2</span>
        </div>
        <div class="max-surface-input">
          <input placeholder="Max" class="input" data-apartments-target="secondSurfaceInput" data-action="keyup->apartments#validSurface" min="1" max="120" type="number" name="surface_max" value=<%= params[:surface_max] if params[:surface_max].present? && params[:surface_max].to_i >= params[:surface_min].to_i %> >
          <span>m2</span>
        </div>

      </div>

      <p class="filter-title">Critères populaires</p>

      <div class="criterias-filter div-filter">

        <%= link_to params[:balcony].present? ? request.params.except(:balcony) : request.params.merge(page: 1, balcony: true) do %>
          <p class= "<%=params[:balcony] == "true" ? 'criteria active' : 'criteria' %>">Balcon (<%= @apartments.where(balcony: true).count + @houses.where(balcony: true).count%>)</p>
        <% end %>

        <% if params[:balcony].present? %>
          <input type="hidden" name="balcony"  value="<%= params[:balcony] %>">
        <% end %>

        <%= link_to params[:chimney].present? ? request.params.except(:chimney) : request.params.merge(page: 1, chimney: true) do %>
          <p class= "<%=params[:chimney] == "true" ? 'criteria active' : 'criteria' %>">Cheminée (<%= @apartments.where(chimney: true).count + @houses.where(chimney: true).count%>)</p>
        <% end %>

        <% if params[:chimney].present? %>
          <input type="hidden" name="chimney"  value="<%= params[:chimney] %>">
        <% end %>


        <% if @apartments.exists? || params[:types].present? && params[:types].include?("flat") %>

          <%= link_to params[:elevator].present? ? request.params.except(:elevator) : request.params.merge(page: 1, elevator: true) do %>
            <p class= "<%=params[:elevator] == "true" ? 'criteria active' : 'criteria' %>">Ascenseur (<%= @apartments.where(elevator: true).count %>)</p>
          <% end %>

          <% if params[:elevator].present? %>
          <input type="hidden" name="elevator"  value="<%= params[:elevator] %>">
          <% end %>

        <% end %>

        <%= link_to params[:garage].present? ? request.params.except(:garage) : request.params.merge(page: 1, garage: true) do %>
          <p class= "<%=params[:garage] == "true" ? 'criteria active' : 'criteria' %>">Garage (<%= @apartments.where(garage: true).count + @houses.where(garage: true).count%>)</p>
        <% end %>

        <% if params[:garage].present? %>
          <input type="hidden" name="garage"  value="<%= params[:garage] %>">
        <% end %>

        <%= link_to params[:terrace].present? ? request.params.except(:terrace) : request.params.merge(page: 1, terrace: true) do %>
          <p class= "<%=params[:terrace] == "true" ? 'criteria active' : 'criteria' %>">Terrasse (<%= @apartments.where(terrace: true).count + @houses.where(terrace: true).count%>)</p>
        <% end %>

        <% if params[:terrace].present? %>
          <input type="hidden" name="terrace"  value="<%= params[:terrace] %>">
        <% end %>


        <% if @houses.exists? || params[:types].present? && params[:types].include?("house") %>

          <%= link_to params[:garden].present? ? request.params.except(:garden) : request.params.merge(page: 1, garden: true) do %>
            <p class= "<%=params[:garden] == "true" ? 'criteria active' : 'criteria' %>">Jardin (<%= @houses.where(garden: true).count%>)</p>
          <% end %>

          <% if params[:garden].present? %>
            <input type="hidden" name="garden"  value="<%= params[:garden] %>">
          <% end %>

          <%= link_to params[:pool].present? ? request.params.except(:pool) : request.params.merge(page: 1, pool: true) do %>
            <p class= "<%=params[:pool] == "true" ? 'criteria active' : 'criteria' %>">Piscine (<%= @houses.where(pool: true).count%>)</p>
          <% end %>

          <% if params[:pool].present? %>
            <input type="hidden" name="pool"  value="<%= params[:pool] %>">
          <% end %>

        <% end %>

        <%= link_to params[:cellar].present? ? request.params.except(:cellar) : request.params.merge(page: 1, cellar: true) do %>
          <p class= "<%=params[:cellar] == "true" ? 'criteria active' : 'criteria' %>">Cave (<%= @apartments.where(cellar: true).count + @houses.where(cellar: true).count%>)</p>
        <% end %>

        <% if params[:cellar].present? %>
          <input type="hidden" name="cellar"  value="<%= params[:cellar] %>">
        <% end %>

      </div>

      <% if @apartments.exists? || params[:types].present? && params[:types].include?("flat") %>

        <p class="filter-title">Critère d'étage</p>

        <div class="criterias-filter div-filter">

          <%= link_to params[:floor].present? && params[:floor] == "ground" ? request.params.except(:floor) : request.params.merge(page: 1, floor: "ground") do %>
            <p class= "<%=params[:floor] == "ground" ? 'criteria active' : 'criteria' %>">Rez de chaussée</p>
          <% end %>
          <%= link_to params[:floor].present? && params[:floor] == "not ground" ? request.params.except(:floor) : request.params.merge(page: 1, floor: "not ground") do %>
            <p class= "<%=params[:floor] == "not ground" ? 'criteria active' : 'criteria' %>">Éviter le Rez de chaussée</p>
          <% end %>
          <%= link_to params[:floor].present? && params[:floor] == "last" ? request.params.except(:floor) : request.params.merge(page: 1, floor: "last") do %>
            <p class= "<%=params[:floor] == "last" ? 'criteria active' : 'criteria' %>">Dernier étage</p>
          <% end %>

        </div>
      <% end %>


      <% if params[:project].present? && params[:project] == "rent" %>

        <p class="filter-title">Type de location</p>

        <div class="criterias-filter div-filter">

          <%= link_to params[:status] == "furnished" ? request.params.except(:status): request.params.merge(page: 1, status: "furnished") do %>
            <p class= "<%=params[:status] == "furnished" ? 'criteria active' : 'criteria' %>">Meublé</p>
          <% end %>
          <%= link_to params[:status] == "unfurnished" ? request.params.except(:status): request.params.merge(page: 1, status: "unfurnished") do %>
            <p class= "<%=params[:status] == "unfurnished" ? 'criteria active' : 'criteria' %>">Non meublé</p>
          <% end %>

          <% if params[:status].present? %>
            <input type="hidden" name="status" value="<%= params[:status] %>">
          <% end %>
        </div>

      <% end %>

    <% end %>

    <%= form_with model: Research.new do |f| %>
      <%= f.hidden_field :project, value: params[:project] if params[:project].present?  %>
      <%= f.hidden_field :types, value: params[:types] if params[:types].present?  %>
      <%= f.hidden_field :locations, value: params[:locations] if params[:locations].present?  %>
      <%= f.hidden_field :rooms, value: params[:rooms] if params[:rooms].present?  %>
      <%= f.hidden_field :bedrooms, value: params[:bedrooms] if params[:bedrooms].present?  %>
      <%= f.hidden_field :surface_min, value: params[:surface_min] if params[:surface_min].present?  %>
      <%= f.hidden_field :surface_max, value: params[:surface_max] if params[:surface_max].present?  %>
      <%= f.hidden_field :status, value: params[:status] if params[:status].present?  %>
      <%= f.hidden_field :link, value: request.url  %>
      <%= button_tag(type: 'submit', class: "save-research-btn") do %>
        <i class="fa-regular fa-bell save-bell"></i>
        <p>Sauvegarder ma recherche</p>
      <% end %>
    <% end %>

  </div>


  <div class="apartments">
    <div class="apartment-infos">

      <p class="what-where">
        <%= pluralize(@properties.count, @what) %>
        <%= @there %>
        <%= humanize_project(@project) %>
      </p>

      <div class="sort-filter">
        <p class="sort-title">Trier par</p>
        <div class="sort-div">
          <div class="sort-input" data-action="click->apartments#displaySort">
            <p class="sort-value"><%= params[:sort].present? ? translate_sort_by(params[:sort]) : "Pertinence" %></p>
            <div class="burger-menu" data-apartments-target="burger">
              <div class="line top-line"></div>
              <div class="line middle-line"></div>
              <div class="line bottom-line"></div>
            </div>
          </div>
          <div class="sort-tags hidden d-none" data-apartments-target="sortPropositions">
            <%= link_to request.params.merge(page: 1, sort: "relevance"), class: "sort-tag first" do %>
              <% if params[:sort].present? && params[:sort] == 'relevance' || !params[:sort].present? %>
                <i class="fa-solid fa-circle-check"></i>
              <% end %>
              <p>Pertinence</p>
            <% end %>
            <%= link_to request.params.merge(page: 1, sort: "price"), class: "sort-tag middle" do %>
              <% if params[:sort].present? && params[:sort] == 'price' %>
                <i class="fa-solid fa-circle-check"></i>
              <% end %>
              <p>Prix</p>
            <% end %>
            <%= link_to request.params.merge(page: 1, sort: "surface"), class: "sort-tag last" do %>
              <% if params[:sort].present? && params[:sort] == 'surface' %>
                <i class="fa-solid fa-circle-check"></i>
              <% end %>
              <p>Surface</p>
            <% end %>
            <% if params[:sort].present? %>
              <input type="hidden" name="sort" value="<%= params[:sort] %>" >
            <% end %>

          </div>
        </div>
      </div>
    </div>

    <div class="apartment-cards" data-apartments-target="apartments">
      <%= render 'properties' %>
    </div>

    <%= render "pagination" %>

  </div>
</div>
